<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Today I Learned</title>
    <link>https://todayilearned.dev/posts/</link>
    <description>Recent content in Posts on Today I Learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Mar 2019 07:50:10 -0400</lastBuildDate>
    
	<atom:link href="https://todayilearned.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The ps -o flag</title>
      <link>https://todayilearned.dev/posts/ps-option/</link>
      <pubDate>Tue, 12 Mar 2019 07:50:10 -0400</pubDate>
      
      <guid>https://todayilearned.dev/posts/ps-option/</guid>
      <description>The ps command is well known for displaying process information, but it was only recently that I found out about the useful -o flag. What this flag does is display the informatin about one or more selected headers.
Let&amp;rsquo;s see an example where we display the rss (Resident Set Size) for the process with pid 5380:
$ ps -o rss -p 5380 RSS 1784  rss represents the real memory, that is, the process&amp;rsquo;s memory that is held in RAM.</description>
    </item>
    
    <item>
      <title>Vim :normal</title>
      <link>https://todayilearned.dev/posts/vim-normal-command/</link>
      <pubDate>Mon, 11 Mar 2019 17:00:10 -0400</pubDate>
      
      <guid>https://todayilearned.dev/posts/vim-normal-command/</guid>
      <description>Sometimes it is useful to use the :normal command in VIM, what it does is accept a sequence of keys and pretend they were typed in normal mode.
Let&amp;rsquo;s see how this works with a quick example. Suppose we have a file like the following:
1 abc,123 2 bcd,4 3 cde,54321 4 def,88 And we want the end result to be:
hash[&amp;#34;abc&amp;#34;] = 123 hash[&amp;#34;bcd&amp;#34;] = 4 hash[&amp;#34;cde&amp;#34;] = 54321 hash[&amp;#34;def&amp;#34;] = 88 To solve this in one command we can select the lines we want to modify and use:</description>
    </item>
    
    <item>
      <title>Vim Repeat Substitute</title>
      <link>https://todayilearned.dev/posts/vim-repeat-substitute/</link>
      <pubDate>Sun, 10 Mar 2019 20:25:10 -0400</pubDate>
      
      <guid>https://todayilearned.dev/posts/vim-repeat-substitute/</guid>
      <description>TIL about the &amp;amp; command in Vim and how it can be used to repeat the last search and replace pattern.
Let&amp;rsquo;s see how this works with a quick example. Suppose we have a file like the following:
rock paper scissors rock paper scissors rock paper scissors And you want to replace the word rock with lizard just in the lines one and three (don&amp;rsquo;t ask me why). Normally I would do something like:</description>
    </item>
    
  </channel>
</rss>